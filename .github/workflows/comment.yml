# Name for your workflow
name: PR Comment Bot

# Controls when the action will run.
on:
  # This specifies that the workflow should trigger on pull_request events.
  pull_request:
    # We only want to run this when a pull request is first opened.
    types: [opened]

# A workflow run is made up of one or more jobs
jobs:
  # The name of our job
  add-comment:
    # The type of virtual machine to run the job on
    runs-on: ubuntu-latest

    # This gives the action the necessary permissions to write a comment on the pull request.
    permissions:
      pull-requests: write

    # A sequence of tasks that will be executed as part of the job
    steps:
      # This is the step that will post the comment.
      - name: Add comment to PR
        # We are using the pre-built 'github-script' action
        uses: actions/github-script@v7
        with:
          # The 'github-token' is automatically created and provided by Actions.
          # We don't need to do anything to set it up.
          github-token: ${{secrets.GITHUB_TOKEN}}
          # This is the script that will be executed.
          script: |
            // Get the pull request number from the event context

            const issue_number = context.issue.number;

            const apiUrl = 'https://4djfomzutg.execute-api.us-west-2.amazonaws.com/v1/api';
            console.log(`Calling API: ${apiUrl}`);
            
            const headers = {
              'Content-Type': 'application/json',
              'x-api-key': 'ojR4WdbesL8l3pXNhsBlVau1FwBq5u9i1WL1nA16' 
            };

            const body = {
              "user_id": "ftsai", 
              "prompts": ["what is a good test in unit testing?"],
              "model": "ollama.deepseek-r1:latest"
            }

            console.log(`Calling API: ${apiUrl}`);
            
            const response = await fetch(apiUrl, {
              method: 'POST',
              headers: headers,
              body: JSON.stringify(body)
            });
            const data = await response.json();
            
            console.log(data)

            // Post a comment on the pull request

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: data
            });
